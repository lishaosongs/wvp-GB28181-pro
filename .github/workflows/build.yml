name: release-ubuntu

on:
  push:
    branches:
      - main  # 推送到main分支触发
  workflow_dispatch:  # 手动触发

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64]
      max-parallel: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create release dir
        run: |
          rm -rf release 
          mkdir release
          echo ${{ github.sha }} > Release.txt
          cp Release.txt LICENSE release/
          cat Release.txt

      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Compile backend
        run: |
          mvn package
          mvn package -P war

      - name: Compile frontend
        run: |
          cd ./web
          npm install
          npm run build:prod
          cd ../

      - name: Package Files
        run: |
          # 复制文件
          cp -r ./src/main/resources/static release/
          cp ./target/*.jar release/
          cp ./src/main/resources/application-dev.yml release/application.yml
          
          # 分支名固定为main（或根据实际分支获取）
          BRANCH_NAME="main"
          
          # 生成唯一标识（使用commit的短SHA，避免重复）
          COMMIT_SHORT_SHA=$(echo ${{ github.sha }} | cut -c 1-7)
          # 构建文件名（分支名-commit短SHA）
          ZIP_FILE_NAME="${BRANCH_NAME}-${COMMIT_SHORT_SHA}.zip"
          zip -r "$ZIP_FILE_NAME" release
          echo "ZIP_FILE_NAME=$ZIP_FILE_NAME" >> $GITHUB_ENV
          # 生成唯一标签名（用于关联Release）
          echo "TAG_NAME=auto-release-${COMMIT_SHORT_SHA}" >> $GITHUB_ENV

      - name: Create and upload Release
        uses: softprops/action-gh-release@v2
        # 移除标签条件，所有触发场景都执行
        with:
          # 强制创建标签（如果不存在）
          tag_name: ${{ env.TAG_NAME }}
          # Release标题（包含分支和commit信息）
          name: Auto Release - ${{ env.BRANCH_NAME }}@${{ env.COMMIT_SHORT_SHA }}
          # Release描述
          body: |
            自动构建于 ${{ github.event_name }} 事件
            - 分支: ${{ env.BRANCH_NAME }}
            - Commit: ${{ github.sha }}
          # 上传构建的压缩包
          files: ${{ env.ZIP_FILE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
